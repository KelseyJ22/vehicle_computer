/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Tue Nov 15 11:16:46 2016. */

#ifndef PB_DATA_PB_H_INCLUDED
#define PB_DATA_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _DataMessage {
    bool has_imu_temp;
    int32_t imu_temp;
    bool has_imu_magnet_x;
    int32_t imu_magnet_x;
    bool has_imu_magnet_y;
    int32_t imu_magnet_y;
    bool has_imu_magnet_z;
    int32_t imu_magnet_z;
    bool has_imu_gyro_x;
    int32_t imu_gyro_x;
    bool has_imu_gyro_y;
    int32_t imu_gyro_y;
    bool has_imu_gyro_z;
    int32_t imu_gyro_z;
    bool has_tritium_rx_error_count;
    uint32_t tritium_rx_error_count;
    bool has_tritium_tx_error_count;
    uint32_t tritium_tx_error_count;
    bool has_tritium_active_motor;
    uint32_t tritium_active_motor;
    bool has_tritium_error_flags;
    uint32_t tritium_error_flags;
    bool has_tritium_limit_flags;
    uint32_t tritium_limit_flags;
    bool has_tritium_bus_current;
    uint32_t tritium_bus_current;
    bool has_tritium_bus_voltage;
    uint32_t tritium_bus_voltage;
    bool has_tritium_phase_current;
    uint32_t tritium_phase_current;
    bool has_tritium_15v_rail;
    float tritium_15v_rail;
    bool has_tritium_3v3;
    float tritium_3v3;
    bool has_tritium_1v9;
    float tritium_1v9;
    bool has_tritium_motor_temp;
    float tritium_motor_temp;
    bool has_tritium_heatsink_temp;
    float tritium_heatsink_temp;
    bool has_tritium_dsp_temp;
    float tritium_dsp_temp;
    bool has_tritium_dc_bus_amphour;
    float tritium_dc_bus_amphour;
    bool has_tritium_odometer;
    float tritium_odometer;
    bool has_tritiums_on;
    bool tritiums_on;
    bool has_average_speed;
    int32_t average_speed;
    bool has_drive_mode;
    int32_t drive_mode;
    bool has_cruise_speed;
    int32_t cruise_speed;
    bool has_cruise_on;
    bool cruise_on;
/* @@protoc_insertion_point(struct:DataMessage) */
} DataMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define DataMessage_init_default                 {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define DataMessage_init_zero                    {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define DataMessage_imu_temp_tag                 1
#define DataMessage_imu_magnet_x_tag             2
#define DataMessage_imu_magnet_y_tag             3
#define DataMessage_imu_magnet_z_tag             4
#define DataMessage_imu_gyro_x_tag               5
#define DataMessage_imu_gyro_y_tag               6
#define DataMessage_imu_gyro_z_tag               7
#define DataMessage_tritium_rx_error_count_tag   8
#define DataMessage_tritium_tx_error_count_tag   9
#define DataMessage_tritium_active_motor_tag     10
#define DataMessage_tritium_error_flags_tag      11
#define DataMessage_tritium_limit_flags_tag      12
#define DataMessage_tritium_bus_current_tag      13
#define DataMessage_tritium_bus_voltage_tag      14
#define DataMessage_tritium_phase_current_tag    15
#define DataMessage_tritium_15v_rail_tag         16
#define DataMessage_tritium_3v3_tag              17
#define DataMessage_tritium_1v9_tag              18
#define DataMessage_tritium_motor_temp_tag       19
#define DataMessage_tritium_heatsink_temp_tag    20
#define DataMessage_tritium_dsp_temp_tag         21
#define DataMessage_tritium_dc_bus_amphour_tag   22
#define DataMessage_tritium_odometer_tag         23
#define DataMessage_tritiums_on_tag              24
#define DataMessage_average_speed_tag            25
#define DataMessage_drive_mode_tag               26
#define DataMessage_cruise_speed_tag             27
#define DataMessage_cruise_on_tag                28

/* Struct field encoding specification for nanopb */
extern const pb_field_t DataMessage_fields[29];

/* Maximum encoded size of messages (where known) */
#define DataMessage_size                         215

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define DATA_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
